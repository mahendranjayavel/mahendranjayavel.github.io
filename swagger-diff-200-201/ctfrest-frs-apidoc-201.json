{
  "swagger" : "2.0",
  "info" : {
    "version" : "20.1.425",
    "title" : "File Release System API"
  },
  "basePath" : "/ctfrest/frs/v1",
  "tags" : [ {
    "name" : "Files"
  }, {
    "name" : "Packages"
  }, {
    "name" : "Releases"
  } ],
  "paths" : {
    "/files/{frsfileid}" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Gets file data by id",
        "description" : "",
        "operationId" : "getFile",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "frsfileid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "frs(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetFileEntity"
            },
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "File data version"
              }
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such file",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Files" ],
        "summary" : "Deletes a file",
        "description" : "",
        "operationId" : "deleteFile",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "frsfileid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "frs(?:\\d+)"
        } ],
        "responses" : {
          "204" : {
            "description" : "File is deleted."
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such file",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/files/{frsfileid}/file-id" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Gets file storage id for download",
        "description" : "",
        "operationId" : "getFileStorageId",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "frsfileid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "frs(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GuidKey"
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such file",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/packages/{packageid}" : {
      "get" : {
        "tags" : [ "Packages" ],
        "summary" : "Gets package data by id",
        "description" : "",
        "operationId" : "getPackage",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "packageid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "pkg(\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPackageEntity"
            },
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Package data version"
              }
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such package",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Packages" ],
        "summary" : "Deletes a package",
        "description" : "",
        "operationId" : "deletePackage",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "packageid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "pkg(\\d+)"
        } ],
        "responses" : {
          "204" : {
            "description" : "Package is deleted."
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such package",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Packages" ],
        "summary" : "Updates package data by id",
        "description" : "",
        "operationId" : "updatePackage",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Updated package info",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatchPackage"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Package version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "packageid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "pkg(\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetPackageEntity"
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such package",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/packages/{packageid}/releases" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Gets package releases.",
        "description" : "",
        "operationId" : "getReleases",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "packageid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "pkg(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Releases retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetReleasesEntity"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "No such package"
          }
        }
      },
      "post" : {
        "tags" : [ "Releases" ],
        "summary" : "Creates release",
        "description" : "",
        "operationId" : "createRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New release data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostRelease"
          }
        }, {
          "name" : "packageid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "pkg(?:\\d+)"
        } ],
        "responses" : {
          "201" : {
            "description" : "Release is created successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetReleaseEntity"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          }
        }
      }
    },
    "/projects/{projectId}/packages" : {
      "get" : {
        "tags" : [ "Packages" ],
        "summary" : "Gets project packages.",
        "description" : "",
        "operationId" : "getPackages",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id/Project Path",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d+))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "200" : {
            "description" : "Releases retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetPackagesEntity"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "No such project"
          }
        }
      },
      "post" : {
        "tags" : [ "Packages" ],
        "summary" : "Creates package",
        "description" : "",
        "operationId" : "createPackage",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New package data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostPackage"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id/Project Path",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d+))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "201" : {
            "description" : "Package is created successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetPackageEntity"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          }
        }
      }
    },
    "/releases/projects/{projectId}" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Gets project's release list",
        "description" : "",
        "operationId" : "getRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project Id/Project Path",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d+))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetReleaseEntity"
            },
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Release data version"
              }
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such release",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/releases/{releaseid}" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Gets release data by id",
        "description" : "",
        "operationId" : "getRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetReleaseEntity"
            },
            "headers" : {
              "ETag" : {
                "type" : "string",
                "description" : "Release data version"
              }
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such release",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Releases" ],
        "summary" : "Deletes a release",
        "description" : "",
        "operationId" : "deleteRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "204" : {
            "description" : "Release is deleted."
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such release",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Releases" ],
        "summary" : "Updates release data by id",
        "description" : "",
        "operationId" : "updateRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Updated release info",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatchRelease"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Release version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "schema" : {
              "$ref" : "#/definitions/GetReleaseEntity"
            }
          },
          "403" : {
            "description" : "Permission denied",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          },
          "404" : {
            "description" : "No such release",
            "schema" : {
              "$ref" : "#/definitions/ErrorEntity"
            }
          }
        }
      }
    },
    "/releases/{releaseid}/artifacts-reported" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Gets artifacts reported in release.",
        "description" : "",
        "operationId" : "getArtifactsReportedInRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Artifacts retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetArtifactsEntity"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "No such release"
          }
        }
      }
    },
    "/releases/{releaseid}/artifacts-resolved" : {
      "get" : {
        "tags" : [ "Releases" ],
        "summary" : "Gets artifacts resolved in release.",
        "description" : "",
        "operationId" : "getArtifactsResolvedInRelease",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Artifacts retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetArtifactsEntity"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "No such release"
          }
        }
      }
    },
    "/releases/{releaseid}/files" : {
      "get" : {
        "tags" : [ "Files" ],
        "summary" : "Gets release files.",
        "description" : "",
        "operationId" : "getFiles",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "200" : {
            "description" : "Files retrieved successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetReleasesEntity"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "No such release"
          }
        }
      },
      "post" : {
        "tags" : [ "Files" ],
        "summary" : "Creates release file",
        "description" : "",
        "operationId" : "createFile",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "New file data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostFile"
          }
        }, {
          "name" : "releaseid",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "rel(?:\\d+)"
        } ],
        "responses" : {
          "201" : {
            "description" : "File is created successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetFileEntity"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          }
        }
      }
    }
  },
  "definitions" : {
    "AbstractEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "ErrorEntity" : {
      "type" : "object",
      "properties" : {
        "code" : {
          "type" : "string",
          "readOnly" : true
        },
        "message" : {
          "type" : "string",
          "readOnly" : true
        },
        "id" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "GetArtifactEntity" : {
      "type" : "object",
      "required" : [ "id", "lastModifiedDate", "projectId", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "TeamForge id",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true
        },
        "statusClass" : {
          "type" : "string",
          "readOnly" : true
        },
        "statusId" : {
          "type" : "string",
          "readOnly" : true
        },
        "priority" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "artifactGroup" : {
          "type" : "string",
          "readOnly" : true
        },
        "category" : {
          "type" : "string",
          "readOnly" : true
        },
        "customer" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "submittedByFullname" : {
          "type" : "string",
          "readOnly" : true
        },
        "submittedByUsername" : {
          "type" : "string",
          "readOnly" : true
        },
        "submittedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "assignedToFullname" : {
          "type" : "string",
          "readOnly" : true
        },
        "assignedToUsername" : {
          "type" : "string",
          "readOnly" : true
        },
        "monitoringUserId" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "closeDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "estimatedEffort" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "actualEffort" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "remainingEffort" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "autosumming" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "autosummingPoints" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "points" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectPathString" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "folderId" : {
          "type" : "string",
          "readOnly" : true
        },
        "folderPathString" : {
          "type" : "string",
          "readOnly" : true
        },
        "folderTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "itemPath" : {
          "type" : "string",
          "readOnly" : true
        },
        "planningFolderId" : {
          "type" : "string",
          "readOnly" : true
        },
        "planningFolderTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamId" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "searchScore" : {
          "type" : "number",
          "format" : "float",
          "readOnly" : true
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetArtifactsEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetArtifactEntity"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetFileEntity" : {
      "type" : "object",
      "required" : [ "createdBy", "createdDate", "id", "lastModifiedBy", "lastModifiedDate", "projectId", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "TeamForge id",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "filename" : {
          "type" : "string",
          "readOnly" : true
        },
        "mimeType" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true
        },
        "contentKey" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "planningFolderId" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamId" : {
          "type" : "string",
          "readOnly" : true
        },
        "path" : {
          "type" : "string",
          "readOnly" : true
        },
        "size" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "lightWeight" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastModifiedBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetPackageEntity" : {
      "type" : "object",
      "required" : [ "createdBy", "createdDate", "id", "lastModifiedBy", "lastModifiedDate", "projectId", "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "TeamForge id",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "parentFolderId" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "path" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastModifiedBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "published" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "downloaded" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetPackagesEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetPackageEntity"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetReleaseEntity" : {
      "type" : "object",
      "required" : [ "createdBy", "createdDate", "id", "lastModifiedBy", "lastModifiedDate", "maturity", "projectId", "status", "title" ],
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "TeamForge id",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true
        },
        "maturity" : {
          "type" : "string",
          "readOnly" : true
        },
        "parentFolderId" : {
          "type" : "string",
          "readOnly" : true
        },
        "parentFolderTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "path" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastModifiedBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "downloaded" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetReleasesEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetReleaseEntity"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GuidKey" : {
      "type" : "object",
      "properties" : {
        "guid" : {
          "type" : "string"
        },
        "prefix" : {
          "type" : "string"
        }
      }
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "readOnly" : true
        },
        "templated" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PatchPackage" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "published" : {
          "type" : "boolean",
          "readOnly" : true
        }
      },
      "description" : "Model to update a package"
    },
    "PatchRelease" : {
      "type" : "object",
      "properties" : {
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true
        },
        "maturity" : {
          "type" : "string",
          "readOnly" : true
        }
      },
      "description" : "Model to update a release"
    },
    "PostFile" : {
      "type" : "object",
      "required" : [ "fileId", "fileName", "mimeType" ],
      "properties" : {
        "fileName" : {
          "type" : "string",
          "readOnly" : true
        },
        "mimeType" : {
          "type" : "string",
          "readOnly" : true
        },
        "fileId" : {
          "type" : "string",
          "readOnly" : true
        }
      },
      "description" : "Model to create a release file"
    },
    "PostPackage" : {
      "type" : "object",
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "published" : {
          "type" : "boolean",
          "readOnly" : true
        }
      },
      "description" : "Model to create a package"
    },
    "PostRelease" : {
      "type" : "object",
      "required" : [ "maturity", "status", "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "status" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "pending", "active", "obsolete" ]
        },
        "maturity" : {
          "type" : "string",
          "readOnly" : true,
          "enum" : [ "None", "Prototype", "Development Build", "Alpha", "Beta", "Early Access", "Pre-General Availability", "General Availability", "Stable", "Obsolete" ]
        }
      },
      "description" : "Model to create a release"
    }
  }
}