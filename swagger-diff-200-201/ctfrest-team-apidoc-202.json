{
  "swagger" : "2.0",
  "info" : {
    "version" : "20.2.556",
    "title" : "REST Team App"
  },
  "basePath" : "/ctfrest/team/v1",
  "tags" : [ {
    "name" : "Teams"
  } ],
  "paths" : {
    "/projects/{projectId}/teams" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Gets list of teams for a project",
        "description" : "",
        "operationId" : "getTeamList",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Max. number of teams to be returned in one call",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned team list successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetTeamList"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid project id"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Teams" ],
        "summary" : "Creates a team",
        "description" : "",
        "operationId" : "createTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "TeamData",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostTeam"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "201" : {
            "description" : "Team created successfully"
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      }
    },
    "/projects/{projectId}/teams/tree" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Gets list of teams by hierarchy for a project",
        "description" : "",
        "operationId" : "getTeamListByHierarchy",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Max. number of teams to be returned in one call",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned team list successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetTeam By Hierarchy"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid project id"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      }
    },
    "/teams/{teamId}" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Gets team details",
        "description" : "",
        "operationId" : "getTeam",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "(?:team(?:\\d{4,}))"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned team details successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetTeam"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid team id"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Teams" ],
        "summary" : "Deletes a team",
        "description" : "",
        "operationId" : "deleteTeam",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "team id",
          "required" : true,
          "type" : "string",
          "pattern" : "(?:team(?:\\d{4,}))"
        } ],
        "responses" : {
          "204" : {
            "description" : "Team is deleted."
          },
          "400" : {
            "description" : "Invalid Parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid team id"
          }
        }
      },
      "patch" : {
        "tags" : [ "Teams" ],
        "summary" : "Updates team data",
        "description" : "",
        "operationId" : "updateTeam",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Team data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatchTeam"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "Team version",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "teamId",
          "in" : "path",
          "description" : "Updated team id",
          "required" : true,
          "type" : "string",
          "pattern" : "(?:team(?:\\d{4,}))"
        } ],
        "responses" : {
          "204" : {
            "description" : "Team data updated successfully."
          },
          "304" : {
            "description" : "Not Modified"
          },
          "400" : {
            "description" : "Invalid Parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid Team id"
          },
          "409" : {
            "description" : "Version Conflict"
          },
          "412" : {
            "description" : "Missing If-Match header"
          }
        }
      }
    },
    "/teams/{teamId}/members" : {
      "get" : {
        "tags" : [ "Teams" ],
        "summary" : "Gets user list for team.",
        "description" : "The list includes users in the team",
        "operationId" : "getUsersInTeam",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "teamId",
          "in" : "path",
          "description" : "Team id to list users",
          "required" : true,
          "type" : "string",
          "pattern" : "(?:team(?:\\d{4,}))"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Max. number of teams to be returned in one call",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returns the list of users",
            "schema" : {
              "$ref" : "#/definitions/GetUsersInTeam"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid team id"
          }
        }
      }
    }
  },
  "definitions" : {
    "AbstractEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetSimpleTeam" : {
      "type" : "object",
      "properties" : {
        "teamId" : {
          "type" : "string",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "parentTeamId" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing brief teams in a project"
    },
    "GetTeam" : {
      "type" : "object",
      "required" : [ "teamId" ],
      "properties" : {
        "teamId" : {
          "type" : "string",
          "description" : "TeamForge Id",
          "readOnly" : true
        },
        "title" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "parentTeamId" : {
          "type" : "string",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamOwnerName" : {
          "type" : "string",
          "readOnly" : true
        },
        "teamOwnerId" : {
          "type" : "string",
          "readOnly" : true
        },
        "memberUserNames" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "version" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "dateCreated" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "createdBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "lastModifiedDate" : {
          "type" : "string",
          "format" : "date-time",
          "readOnly" : true
        },
        "lastModifiedBy" : {
          "type" : "string",
          "readOnly" : true
        },
        "isDeleted" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing team details"
    },
    "GetTeam By Hierarchy" : {
      "type" : "object",
      "required" : [ "children", "familyTitle", "folderPath", "text" ],
      "properties" : {
        "text" : {
          "type" : "string",
          "readOnly" : true
        },
        "folderPath" : {
          "type" : "string",
          "readOnly" : true
        },
        "children" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/GetTeam By Hierarchy"
          }
        },
        "familyTitle" : {
          "type" : "string",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing team List by Hierarchy details"
    },
    "GetTeamList" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetSimpleTeam"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing list of teams in a project"
    },
    "GetTeamMember" : {
      "type" : "object",
      "properties" : {
        "userId" : {
          "type" : "string",
          "readOnly" : true
        },
        "userName" : {
          "type" : "string",
          "readOnly" : true
        },
        "emailId" : {
          "type" : "string",
          "readOnly" : true
        },
        "fullName" : {
          "type" : "string",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing details of members in a team"
    },
    "GetUsersInTeam" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetTeamMember"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing list of users in teams"
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "readOnly" : true
        },
        "templated" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PatchTeam" : {
      "type" : "object",
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "description" : "title"
        },
        "description" : {
          "type" : "string",
          "description" : "description"
        },
        "memberUserNames" : {
          "type" : "array",
          "description" : "member user name",
          "items" : {
            "type" : "string"
          }
        },
        "teamOwnerName" : {
          "type" : "string",
          "description" : "team owner user name"
        }
      },
      "description" : "Model to update the team data"
    },
    "PostTeam" : {
      "type" : "object",
      "required" : [ "title" ],
      "properties" : {
        "title" : {
          "type" : "string",
          "description" : "Team Title",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Team description",
          "readOnly" : true
        },
        "parentTeamId" : {
          "type" : "string",
          "description" : "Parent team Id",
          "readOnly" : true
        },
        "memberUserNames" : {
          "type" : "array",
          "description" : "Member user names",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "teamOwnerName" : {
          "type" : "string",
          "description" : " Team owner user name",
          "readOnly" : true
        }
      },
      "description" : "Model to create a team"
    }
  }
}