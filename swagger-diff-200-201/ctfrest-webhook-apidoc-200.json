{
  "swagger" : "2.0",
  "info" : {
    "version" : "20.0.321",
    "title" : "Webhook Management API"
  },
  "basePath" : "/ctfrest/webhooks/v1",
  "tags" : [ {
    "name" : "Webhooks"
  } ],
  "paths" : {
    "/projects/{projectId}/events" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Gets list of webhook events",
        "description" : "",
        "operationId" : "getWebhookEventList",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned webhook event list successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetWebhookEventsList"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      }
    },
    "/projects/{projectId}/subscriber" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Gets list of webr Subscribers",
        "description" : "",
        "operationId" : "getWebrSubscriberList",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned webr Subscriber list successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetWebrSubscriberssList"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Creates a subscriber",
        "description" : "",
        "operationId" : "createSubscriber",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Subscriber Data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostWebrSubscriber"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "201" : {
            "description" : "Subscriber created successfully",
            "schema" : {
              "$ref" : "#/definitions/GetWebrSubscriberssList"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      }
    },
    "/projects/{projectId}/webhook" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Gets list of webhooks for a project",
        "description" : "",
        "operationId" : "getWebhooksList",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "projectId",
          "in" : "path",
          "description" : "Project id",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "Offset",
          "required" : false,
          "type" : "integer",
          "default" : 0,
          "format" : "int32"
        }, {
          "name" : "count",
          "in" : "query",
          "description" : "Max. number of webhooks to be returned in one call",
          "required" : false,
          "type" : "integer",
          "default" : 25,
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned webhooks list successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetWebhooksList"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid project id"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Creates a webhook",
        "description" : "",
        "operationId" : "createWebhook",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook Data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PostWebhook"
          }
        }, {
          "name" : "projectId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "pattern" : "((?:proj(?:\\d{4,}))|(projects\\.[-a-z0-9_]+))"
        } ],
        "responses" : {
          "201" : {
            "description" : "Webhook created successfully",
            "schema" : {
              "$ref" : "#/definitions/GetWebhook"
            }
          },
          "400" : {
            "description" : "Invalid parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      }
    },
    "/webhook/{webhookId}" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Gets webhook details",
        "description" : "",
        "operationId" : "getWebhook",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "pattern" : "(\\d+)",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "Returned webhook details successfully.",
            "schema" : {
              "$ref" : "#/definitions/GetWebhook"
            }
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid webhook id"
          },
          "500" : {
            "description" : "System Error"
          }
        }
      },
      "delete" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Deletes a webhook",
        "description" : "",
        "operationId" : "deleteWebhook",
        "consumes" : [ "application/json", "application/json+v2" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Webhook id",
          "required" : true,
          "type" : "integer",
          "pattern" : "(\\d+)",
          "format" : "int32"
        } ],
        "responses" : {
          "204" : {
            "description" : "Webhook is deleted."
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid webhook id"
          }
        }
      },
      "patch" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Updates a webhook data",
        "description" : "",
        "operationId" : "updateWebhook",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Webhook data",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PatchWebhook"
          }
        }, {
          "name" : "webhookId",
          "in" : "path",
          "description" : "Updated Webhook id",
          "required" : true,
          "type" : "integer",
          "pattern" : "(\\d+)",
          "format" : "int32"
        } ],
        "responses" : {
          "200" : {
            "description" : "webhook data updated successfully."
          },
          "400" : {
            "description" : "Invalid Parameter"
          },
          "403" : {
            "description" : "Permission denied"
          },
          "404" : {
            "description" : "Invalid webhook id"
          }
        }
      }
    }
  },
  "definitions" : {
    "AbstractEntity" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      }
    },
    "GetWebhook" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "projectId" : {
          "type" : "string",
          "readOnly" : true
        },
        "name" : {
          "type" : "string",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "readOnly" : true
        },
        "subscriberName" : {
          "type" : "string",
          "readOnly" : true
        },
        "eventType" : {
          "type" : "string",
          "readOnly" : true
        },
        "succeedOnError" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "directCall" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "useInternalJsvm" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "eventName" : {
          "type" : "string",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "readOnly" : true
        },
        "subscriptionFilter" : {
          "type" : "string",
          "readOnly" : true
        },
        "responseScript" : {
          "type" : "string",
          "readOnly" : true
        },
        "httpHeaders" : {
          "type" : "string",
          "readOnly" : true
        },
        "enabled" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing webhook details"
    },
    "GetWebhookEvent" : {
      "type" : "object",
      "properties" : {
        "eventId" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "eventName" : {
          "type" : "string",
          "readOnly" : true
        },
        "eventType" : {
          "type" : "string",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing webhook event details"
    },
    "GetWebhookEventsList" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetWebhookEvent"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing list of webhook events"
    },
    "GetWebhooksList" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetWebhook"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing list of webhooks in a project"
    },
    "GetWebrSubscriber" : {
      "type" : "object",
      "properties" : {
        "subscriberId" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "subscriberName" : {
          "type" : "string",
          "readOnly" : true
        },
        "httpHeaders" : {
          "type" : "string",
          "readOnly" : true
        },
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing webr Subscriber details"
    },
    "GetWebrSubscriberssList" : {
      "type" : "object",
      "properties" : {
        "_links" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/Link"
          }
        },
        "items" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "$ref" : "#/definitions/GetWebrSubscriber"
          }
        },
        "paged" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "offset" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "integer",
          "format" : "int64",
          "readOnly" : true
        },
        "_embedded" : {
          "type" : "object",
          "readOnly" : true,
          "additionalProperties" : {
            "$ref" : "#/definitions/AbstractEntity"
          }
        }
      },
      "description" : "Model for showing list of webr subscribers"
    },
    "Link" : {
      "type" : "object",
      "properties" : {
        "href" : {
          "type" : "string",
          "readOnly" : true
        },
        "method" : {
          "type" : "string",
          "readOnly" : true
        },
        "templated" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "type" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "PatchWebhook" : {
      "type" : "object",
      "required" : [ "eventType", "name", "subscriberName", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Description",
          "readOnly" : true
        },
        "subscriberName" : {
          "type" : "string",
          "description" : "SubscriberName",
          "readOnly" : true
        },
        "eventType" : {
          "type" : "string",
          "description" : "EventType",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "description" : "Url",
          "readOnly" : true
        },
        "subscriptionFilter" : {
          "type" : "string",
          "description" : "SubscriptionFilter",
          "readOnly" : true
        },
        "responseScript" : {
          "type" : "string",
          "description" : "ResponseScript",
          "readOnly" : true
        },
        "httpHeaders" : {
          "type" : "string",
          "description" : "HttpHeaders",
          "readOnly" : true
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "enabled",
          "readOnly" : true
        }
      },
      "description" : "Model for editing webhook"
    },
    "PostWebhook" : {
      "type" : "object",
      "required" : [ "eventName", "eventType", "name", "subscriberName", "url" ],
      "properties" : {
        "name" : {
          "type" : "string",
          "description" : "Name",
          "readOnly" : true
        },
        "description" : {
          "type" : "string",
          "description" : "Description",
          "readOnly" : true
        },
        "subscriberName" : {
          "type" : "string",
          "description" : "SubscriberName",
          "readOnly" : true
        },
        "eventType" : {
          "type" : "string",
          "description" : "EventType",
          "readOnly" : true
        },
        "succeedOnError" : {
          "type" : "boolean",
          "description" : "succeedOnError",
          "readOnly" : true
        },
        "directCall" : {
          "type" : "boolean",
          "description" : "directCall",
          "readOnly" : true
        },
        "useInternalJsvm" : {
          "type" : "boolean",
          "description" : "useInternalJsvm",
          "readOnly" : true
        },
        "eventName" : {
          "type" : "string",
          "description" : "EventNames",
          "readOnly" : true
        },
        "url" : {
          "type" : "string",
          "description" : "Url",
          "readOnly" : true
        },
        "subscriptionFilter" : {
          "type" : "string",
          "description" : "SubscriptionFilter",
          "readOnly" : true
        },
        "responseScript" : {
          "type" : "string",
          "description" : "ResponseScript",
          "readOnly" : true
        },
        "httpHeaders" : {
          "type" : "string",
          "description" : "HttpHeaders",
          "readOnly" : true
        },
        "enabled" : {
          "type" : "boolean",
          "description" : "enabled",
          "readOnly" : true
        }
      },
      "description" : "Model for creating webook"
    },
    "PostWebrSubscriber" : {
      "type" : "object",
      "required" : [ "subscriberName" ],
      "properties" : {
        "subscriberName" : {
          "type" : "string",
          "description" : "SubscriberName",
          "readOnly" : true
        },
        "httpHeaders" : {
          "type" : "string",
          "description" : "HttpHeaders",
          "readOnly" : true
        }
      },
      "description" : "Model for creating webr subscriber"
    }
  }
}